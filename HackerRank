Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.

SELECT DISTINCT CITY
FROM STATION
WHERE LOWER(SUBSTR(CITY,1,1)) in ('a','e','i','o','u');

Query the list of CITY names from STATION that end with vowels. Your result cannot contain duplicates.
MySQL Answer
SELECT DISTINCT CITY
FROM STATION
WHERE RIGHT(LOWER(CITY),1) in ('a','e','i','o','u');    

Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.
SELECT DISTINCT CITY
FROM STATION
WHERE RIGHT(LOWER(CITY),1) in ('a','e','i','o','u') AND 
LOWER(SUBSTR(CITY,1,1)) in ('a','e','i','o','u');  

Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.
SELECT DISTINCT CITY
FROM STATION
WHERE LOWER(SUBSTR(CITY,1,1)) NOT IN ('a','e','i','o','u');

Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.
SELECT DISTINCT CITY
FROM STATION
WHERE RIGHT(LOWER(CITY),1) NOT IN ('a','e','i','o','u');    

Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.
SELECT DISTINCT CITY
FROM STATION
WHERE RIGHT(LOWER(CITY),1) NOT IN ('a','e','i','o','u') AND LOWER(SUBSTR(CITY,1,1)) NOT IN ('a','e','i','o','u');    

Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. 
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), 
secondary sort them by ascending ID.
SELECT Name
FROM STUDENTS
WHERE MARKS > 75
ORDER BY SUBSTR(NAME,-3,3), ID ASC

Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.
SELECT name
FROM Employee
Order by name ASC;

Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than 
2000 per month who have been employees for less than 10 months. Sort your result by ascending employee_id.
SELECT name
FROM Employee
WHERE months < 10 AND salary > 2000
ORDER BY employee_id;
