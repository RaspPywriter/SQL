Questions
1. Create view, CustomerNames, that shows customer's first and last name and the date of movie rental.
2. How do you get CustomerNames to run?
3. Create a function (GetActorName) to return an actor name based on passing the actor id. And show how to run it.
4. Create a trigger that is activated when there is an update to the actor_copy table.
5. Create an payment_audit table with the following fields: audit_id (int auto_increment), payment_id (int 10), amount (decimal 5, 2), changed_to (decimal 5,2), changed_on date, action (varchar 50). Audit_id is the primary key.
6. Create a trigger called after_payment_update that inserts the changes into payment_audit table. 

Answers
1.
CREATE VIEW CustomerNames AS
SELECT customer.last_name, customer.first_name, rental.rental_date
FROM customer
INNER JOIN rental ON customer.customer_id = rental.customer_id;

2.
SELECT * FROM CustomerNames;

3.
delimiter //
CREATE FUNCTION GetActorName(a_id INT)
RETURNS varchar(50) DETERMINISTIC
BEGIN
DECLARE actor_name varchar(50);
SELECT CONCAT(first_name, ' ',last_name)
INTO actor_name
FROM actor
WHERE actor_id = a_id;
RETURN actor_name;
END //
Select GetActorName(50) as 'Actor Name'

4.
delimiter //

CREATE TRIGGER Test_Trigger
AFTER UPDATE ON actor
FOR EACH ROW
BEGIN
UPDATE actor_copy
SET last_update = NOW();
END//
delimiter ;

5.
CREATE TABLE payment_audit (
	audit_id INT NOT NULL AUTO_INCREMENT,
	payment_id INT(10) NOT NULL,
	amount DECIMAL(5,2) NOT NULL,
	changed_to DECIMAL(5,2) NOT NULL,
    changed_on DATETIME NOT NULL,
	ACTION VARCHAR(50) NOT NULL,
	PRIMARY KEY (audit_id)
	)
  
  6.
  delimiter //
CREATE TRIGGER after_payment_update
AFTER UPDATE ON payment
FOR EACH ROW
BEGIN
INSERT INTO payment_audit
SET ACTION = 'Update',
payment_id = OLD.payment_id,
amount = OLD.amount, 
changed_to = NEW.amount,
changed_on = NOW();
END //
delimiter ;
