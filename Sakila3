Questions
1. What is the average payment for each customer?
2. What is the total of all payments for all customers?
3. What is the average of all payments for all customers?
4. Get the total sum of each customer if it is greater than $150.
5. Print each customer's full name.
6. Combine each customer's street address, zip code and phone number into one customer contact information field.
7. Return the first three letters of each customer's first name.
8. Return the number of characters in each customer's first name.
9. Return the number of letters in the longest customer first name.
10. Check to see if a customer's first name is longer than last name, or the same, or last name is longer than first name.
11. Check to see if a customer's first name is identical to last name.
12. Check if a customer has the same first and last name.
13. How to get today's date?
14. Return the day from the payment date.
15. Return the month from the payment date.
16. Return the week of the year from the payment date.
17. Alias the payment date as Due Date and add one month to that date and alias that as Past Due Date.
18. Give the number of days between 10/21/2019 and 12/31/2019?
19. Determine how many days movies were rented.
20. Determine how long someone has been a customer in days.
21. Determine how long someone has been a customer in years.
22. Determine how long someone has been a customer to the whole year.

Answers
1.
SELECT customer_id, AVG(amount) AS 'Average Payment'
FROM payment
GROUP BY customer_id;

2.
SELECT SUM(amount) AS 'Total Payment'
FROM payment;

3.
SELECT AVG(amount) AS 'Average Payment for all Customers'
FROM payment;

4.
SELECT customer_id, SUM(amount) AS 'Total Payment'
FROM payment
GROUP BY customer_id
HAVING SUM(amount) >= 150;

5.
SELECT CONCAT(first_name, ' ', last_name) As 'Full Name'
FROM customer;
6.
SELECT CONCAT(address, ' - ', postal_code, ' - ', phone) As 'Customer Contact Information '
FROM address;
        
7.
SELECT LEFT(first_name, 3) As 'First 3 Characters'
FROM customer;

8.
SELECT LENGTH(first_name) As 'First Name Length'
FROM customer;

9.
SELECT MAX(LENGTH(first_name)) As 'Max length in the column'
FROM customer;

10.
SELECT STRCMP(first_name, last_name) As Result
FROM customer;
/* if result is 0 then they are identical, if -1 then first name is longer, if 1 last name is longer*/

11.
SELECT STRCMP(first_name, last_name) As Result
FROM customer
WHERE STRCMP(first_name, last_name) = 0;

12.
SELECT first_name, last_name, first_name LIKE last_name AS 'Same name'
FROM customer;
/* if you get a 0 then they are not the same, if you get a 1 they are the same*/

13.
SELECT CURDATE();

14.
SELECT DAY(payment_date)
FROM payment

15.
SELECT MONTH(payment_date)
FROM payment

16.
SELECT WEEK(payment_date)
FROM payment

17.
SELECT payment_date AS 'Due Date', DATE_ADD(payment_date, INTERVAL 1 MONTH) As 'Past Due Date'
FROM payment;

18.
SELECT DATEDIFF('2019-12-31', '2019-10-21')

19.
SELECT rental_id, DATEDIFF(return_date, rental_date) As 'Rented for (in days)'
FROM rental;

20.
SELECT DATEDIFF(CURDATE(), create_date) As 'Customer For'
FROM customer;

21.
SELECT (DATEDIFF(CURDATE(), create_date)/365) As 'Customer For (years)'
FROM customer;

22. 
SELECT ROUND((DATEDIFF(CURDATE(), create_date)/365)) As 'Customer For (years)'
FROM customer;
